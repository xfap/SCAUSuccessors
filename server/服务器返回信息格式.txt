主机名url：192.168.253.1/successor/Listerner
你们请求wx.request里的 格式 data{
                stype="",
                arg1:"",
                arg2:""
                }
我最终接收的形式是 192.168.253.1/successor/Listerner?stype=""&arg1=""&arg2=""&...


总共的对服务器的请求操作：
	public static final String HTTP_PARAMETER_TYPE_ADDRESS="address";
	public static final String HTTP_PARAMETER_TYPE_browse="browse";
	public static final String HTTP_PARAMETER_TYPE_browse_class="browse_class";
	public static final String HTTP_PARAMETER_TYPE_browse_refresh="browse_refresh";
	public static final String HTTP_PARAMETER_TYPE_first_login="first_login";
	public static final String HTTP_PARAMETER_TYPE_login="login";
	public static final String HTTP_PARAMETER_TYPE_login_confirm="login_confirm";
	public static final String HTTP_PARAMETER_TYPE_getInfo="getInfo";
	public static final String HTTP_PARAMETER_TYPE_browse_refresh_class="browse_refresh_class";
	public static final String HTTP_PARAMETER_TYPE_search="search";
	public static final String HTTP_PARAMETER_TYPE_upload="upload";
	public static final String HTTP_PARAMETER_TYPE_delete="delete";
	public static final String HTTP_PARAMETER_TYPE_modify="modify";
	public static final String HTTP_PARAMETER_TYPE_need="need";
	public static final String HTTP_PARAMETER_TYPE_confirmNeed="confirmNeed";
	public static final String HTTP_PARAMETER_TYPE_haveGot="haveGot";
	public static final String HTTP_PARAMETER_TYPE_haveGiven="haveGiven";
	public static final String HTTP_PARAMETER_TYPE_upload_pic="upload_pic";
	public static final String HTTP_PARAMETER_TYPE_modify_pic="modify_pic";
    
    //add
  	public static final String HTTP_PARAMETER_TYPE_my_request_confirmed = "my_request_confirmed";
	public static final String HTTP_PARAMETER_TYPE_my_request_not_confirmed = "my_request_not_confirmed";
	public static final String HTTP_PARAMETER_TYPE_my_suc_appointed = "my_suc_appointed";
	public static final String HTTP_PARAMETER_TYPE_my_suc_not_appointed = "my_suc_not_appointed";
	public static final String HTTP_PARAMETER_TYPE_my_suc_successing="my_suc_successing";




================================================================
                               4位年 2位月份 2位日 2位时 2位分 2位秒
你们上传的时间的格式要写成，2018_07_05_09_17_55
================================browse================================                
********************
STYPE:browse
其他参数：null
所以wx.request里的 data：{
                stype："browse",
                }
********************
返回的数据：
        {
        re_type:browse
        content:[
            {
                suc_id:"",
                user_id:"",
                suc_title:"",
                suc_intro:"",
                suc_pic_url:"",
                suc_class:"",
                suc_publish_time:""
            },
            {},
            {},
            ...(20个)
        ]
        }
================================browse================================   

================================browse_class================================                
********************
STYPE:browse_class
其他参数：
            suc_class:""
所以wx.request里的 data：{
                stype："browse_class",
                }
********************
返回的数据：
        {
        re_type:browse_class
        content:[
            {
                suc_id:"",
                user_id:"",
                suc_title:"",
                suc_intro:"",
                suc_pic_url:"",
                suc_class:"",
                suc_publish_time:""
            },
            {},
            {},
            ...(20个)
        ]
        }
================================browse_class================================   


=============================browse_refresh===============================     
TYPE:browse_refresh
其他参数：
            suc_class 类别
            suc_id (当前本地的最后一条物品id，也就是显示在最下面的物品id)
所以wx.request里的 data：{
                stype："browse",
                suc_class："类别"
                suc_id:"物品id"
                }       
                
******************************
返回的数据：
        {
        re_type:browse_refresh，
        content:和上面一样格式，20条
        }
=============================browse_refresh===============================  
=============================browse_refresh_class======================================     
TYPE:browse_refresh_class 
其他参数： 
			suc_class    //用户选择的物品类别
            suc_id (当前本地这个类别的最后一条物品id，也就是显示在最下面的物品id)
*********************************************
返回的数据：
            {
                re_type:browse_refresh_class,
                content:[
            {
                suc_id:"",
                suc_title:"",
                suc_intro:"",
                suc_pic_url:"",
                suc_class:"",
                suc_publish_time:""
            },
            {},
            {},
            ...(20个)
        ]
			}
============================browse_refresh_class=======================================   
=============================first_login======================================
TYPE:first_login 
其他参数： 
			user_id
            username
*********************************************
返回的数据：
            {
                re_type:first_login,
				flag:""
				
            }
=============================first_login======================================
        
=============================login======================================     
TYPE:login 
其他参数： 
			user_id
*********************************************
返回的数据：
            {
                re_type:login，
                login_ok:true,
				username:"",
				area_name:"",
				dorm_name:"",
                // //服务器在用户登录的时候，发送这连个flag
				// comfirm_give_flag:"" //对应需求者，所有者是否同意给用户这个物品
				// nedd_flag:""//对应于所有者，向所有者通知，在他离线的这段时间里，是否有人确认需要他的书
                confirm_info:[
                        {
                        suc_id:"",
                        user_id:"",
                        username:"",
                        owner_spare_time_start:"",
                        owner_spare_time_end:""
                        },
                        ...
                    ]
                need_info:[
                            {user_id:"",   //需求者id
                            username:"",  //需求者的姓名
                            suc_id:""     //物品id  //详细信息用suc_id STYPE=getInfo 获取
                            confirm_give_flag："",  //如果这个是1 则 用户已经确认并且填写了 空闲时间，就可以读取下面的时间，
                            //否则为0，用户已经同意，则把下面时间显示出来
                            my_spare:{start:"",//我的空闲时间
                                      end:""},
                            //还要判断，物品 是否已经完成了 继承
                            confirm_recv:"" 
                            confirm_give:""  //这两个任何一个位1 则已经完成继承，都为0 则没有完成
                            complete_time:"" //完成的时间，如果上面两个有一个为1，这个才是时间，否则为 空
                            },   
                            ...
                          ]     
            }
============================login=======================================       
//如果有人确认需要他的书，则本地向服务器请求 数据
=============================login_need--舍弃======================================     
TYPE:login_need
其他参数： 
			user_id
*********************************************
返回的数据：
            {
                re_type:login_need
				need_info:[{user_id:"",   //需求者id
                            username:"",  //需求者的姓名
                            suc_id:""},   //物品id  //详细信息用suc_id STYPE=getInfo 获取
                            ...
                          ]
            }
============================login_need======================================= 
//如果所有者确认了给这个用户书
=============================login_confirm--舍弃======================================     
TYPE:login_confirm
其他参数： 
			user_id
*********************************************
返回的数据：
            {
                re_type:login_confirm
				//所有方的选定时间段
				confirm_info:[
                        {
                        suc_id:"", //详细信息用suc_id STYPE=getInfo 获取
                        user_id:"",
                        username:"",
                        owner_spare_time_start:"",
                        owner_spare_time_end:"",
                        },
                        ...
                    ]
            }
============================login_confirm======================================= 


				


=============================getInfo======================================     
TYPE:getInfo 
其他参数： 
			suc_id
*********************************************
返回的数据：
            {
                re_type:getInfo,
                user_id:"",
                suc_id:"",
                suc_title:"",
                suc_intro:"",
                suc_pic_url:"",
                suc_class:"",		//详情页有放标签则返回，否则不需要返回
                suc_publish_time:""
			}
============================getInfo=======================================   




=============================search======================================     
TYPE:search 
其他参数： 
			key //用户搜索的关键字
*********************************************
返回的数据：
            {
                re_type:search,
                content:[
				{
                suc_id:"",    
                suc_title:"", 
                suc_intro:"", 
                suc_pic_url:"",
                suc_class:"",
                suc_publish_time:""
				},
            {},
            {},
            ...(n个)//返回包含关键字的继承物品信息
			}
============================search=======================================   

=============================upload======================================     
TYPE:upload 
其他参数： 
            user_id
			suc_title
            suc_intro
            suc_class
            publish_time
*********************************************
返回的数据：
            {
                re_type:upload,
                pic_name:"",//该继承品的图片名称，用于传输图片
				upload_flag:"",//是否上传成功
			}
============================upload=======================================   
//文件 即图片的上传是用另一个方法上传的
=============================upload_pic======================================     
TYPE:upload_pic 
其他参数： 
            pic_name   //来自于上个方法的返回，该继承品的图片名称，用于传输图片
*********************************************
返回的数据：
            {
                re_type:upload_pic,
				upload_pic_flag:"",//是否上传成功
                pic_url:""
			}
============================upload_pic======================================= 

=============================delete======================================     
TYPE:delete 
其他参数： 
			suc_id
            user_id
*********************************************
返回的数据：
            {
                re_type:delete,
				delete_flag:"",//是否删除成功
			}
============================delete=======================================   

=============================modify======================================     
TYPE:modify 
其他参数： 
            user_id
			suc_id  //物品原来的id，不能更改
			suc_title
            suc_intro
            modify_pic_flag //1：表示图片没有修改，0：表示图片修改了
            suc_class
            re_publish_time
*********************************************
返回的数据：
            {
                re_type:modify,
				modify_flag:"",//是否修改成功
			}
============================modify=======================================   
//文件 即图片的上传是用另一个方法上传的
=============================modify_pic======================================     
TYPE:modify_pic 
其他参数： 
            user_id
            scu_id
*********************************************
返回的数据：
            {
                re_type:modify_pic,
				modify_pic:"",//是否修改成功
			}
============================modify_pic=======================================  

=============================need======================================     
TYPE:need 
其他参数： 
			user_id//需求者id
			suc_id//需要继承物品id
            need_time//需求者确认需要的时间
*********************************************
返回的数据：
            {
                re_type:need,
				need_flag:"",//请求是否发送成功
			}
============================need=======================================   

=============================confirmNeed======================================     
TYPE:confirmNeed 
其他参数： 
			user_id//需要者id
			suc_id//需要继承物品id
			owner_spare_time_start
			owner_spare_time_end
*********************************************
返回的数据：
            {
                re_type:confirmNeed,
				confirm_flag:"",//是否发送成功
			}
============================confirmNeed======================================= 

=============================haveGot======================================     
TYPE:haveGot 
其他参数： 
			suc_id
            complete_time
*********************************************
返回的数据：
            {
                re_type:haveGot
				haveGot_flag:""//是否发送成功
			}
============================haveGot=======================================   

=============================haveGiven======================================     
TYPE:haveGiven 
其他参数： 
			suc_id
            complete_time
*********************************************
返回的数据：
            {
                re_type:haveGiven
				haveGiven_flag:""//是否发送成功
			}
============================haveGiven=======================================   

=============================address======================================     
TYPE:address 
其他参数： 
			user_id
            area_name
            dorm_name
*********************************************
返回的数据：
            {
                re_type:address
				haveGiven_flag:""//是否发送成功
			}
============================haveGiven=======================================  






